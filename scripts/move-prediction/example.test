##################################################
# Example test file
# Test files are mini bash scripts
# Copy this file and edit it for your use
##################################################

##################################################
# Helper Functions
# There should be no need to edit this
##################################################

get_games () { echo "$GAMES" | shuf -n $1; }
get_games_excl () { comm -23 <(echo "$GAMES") <(echo "$1" | sort) | sed 's/\t//' | shuf -n $2; }
get_games_excl_test () { get_games_excl "$TEST_GAMES" $1; }

##################################################
# Parameters
# Edit this!
##################################################

# full path to sgf game collection
GAMES_PATH="/data/go/games/gogod/"
GAMES="`find "$GAMES_PATH" -name '*.sgf' | sort`"

# boolean parameters (0:disabled, 1:enabled)
PATT_3X3=0    # 3x3 patterns
PATT_CIRC=0   # circular patterns
DT=1          # decision trees
TRAIN=1       # perform training (for pre-generated data)

# use pre-generated data (-:disabled)
PREGEN_GAMMAS="-"
PREGEN_DT="-"

# game lists
TEST_GAMES="`get_games 10`"
PATT_3X3_GAMES="`get_games_excl_test 10`"
PATT_CIRC_GAMES="`get_games_excl_test 10`"
DT_GAMES="`get_games_excl_test 10`"
TRAIN_GAMES="`get_games_excl_test 10`"

# non-pattern
NONPATT_LADDERS=0

# 3x3 patterns
PATT_3X3_THRESHOLD=100

# circular patterns
PATT_CIRC_THRESHOLD=100
PATT_CIRC_START=3
PATT_CIRC_END=15

# decision trees
DT_TYPES="STONE|NOCOMP STONE|CHAINCOMP"
DT_FOREST_SIZE=2
# possible policies:
#   descent_split robust_descent_split robust_win_split robust_loss_split entropy_descent_split entropy_win_split entropy_loss_split winrate_split
#   win_loss_separate weighted_win_loss_separate symmetric_separate weighted_symmetric_separate winrate_entropy weighted_winrate_entropy classification_separate
DT_SELECTION_POLICY="descent_split"
DT_UPDATE_PROB=0.10
DT_SPLIT_AFTER=1000

# testing
TEST_STAGE_SIZE=30

