# The train/test net protocol buffer definition
net: "lenet_train_test.prototxt"
# test_iter specifies how many forward passes the test should carry out.
# In the case of MNIST, we have test batch size 100 and 100 test iterations,
# covering the full 10,000 testing images.
test_iter: 100
# Carry out testing every 500 training iterations.
test_interval: 500
# The base learning rate, momentum and the weight decay of the network.
#base_lr: 0.00001
#momentum: 0.9
#weight_decay: 0.0005
# The learning rate policy
#lr_policy: "inv"
#gamma: 0.0001
#power: 0.75
# Display every 100 iterations
display: 100
# The maximum number of iterations
#max_iter: 30000
# snapshot intermediate results
snapshot: 5000
snapshot_prefix: "snapshots/"
# solver mode: CPU or GPU
solver_mode: GPU

base_lr: 0.002     # begin training at a learning rate of 0.01 = 1e-2

lr_policy: "step" # learning rate policy: drop the learning rate in "steps"
                  # by a factor of gamma every stepsize iterations

gamma: 0.2        # drop the learning rate by a factor of 10
                  # (i.e., multiply it by a factor of gamma = 0.1)

stepsize: 10000  # drop the learning rate every 100K iterations

max_iter: 130000  # train for 350K iterations total

momentum: 0.9
