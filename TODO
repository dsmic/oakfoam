TODO
------------------

Now: (current focus)
  test impact of lastmove playout heuristic
  add results from first playout moves to tree
  stop timed search if best move cannot change
  larger patterns
  change uct_* params to tree_*
  option to output games to sgf with explanations
  try features in playouts after other heuristics, just before random
  add chance a playout move is uniformly random (no heuristics)
  do superko pruning after a number of playouts through a node

Soon: (before next major release)
  try UCB1-TUNED formula (p.216(169) in SylvainGellyThesis)
  prefer games that end sooner? (don't drag on at end)
  progressively add more reward for points diff if winrate very good?
  reduce thinking time if surewin?
  think for longer if needed
  keep track of board hashes incrementally
  speedup features in playouts
  setting to use a total number of playouts per game for time testing
  patterns only near last move?
  fillboard not on 1st/2nd line?
  make sure scoring at end of kgs ranked game works (opponent can't "cheat")
  reduce expand_after?
  tune fillboard's N
  try Criticality as a feature
  look into transposition table-like structure
  look at Feasibility for 19x19 (Baier Hendrik)
  try Feasibility as a feature
  look at Dynamic Komi for 19x19 (Baier Hendrik)
  try LGRF-1/2 with a variable queue (see 6.3.5 Multiple Reply LGR in Baier Hendrik)

Later: (at some point)
  tune parameters
  make sure install works and is described somewhere
  add handicap settings
  add timestamp to log?
  replace FunctionList and ConstantList with std::list<>
  rename/refactor Engine to better name?
  move Go:: objects into own files?
  move main() into Oakfoam.cc
  add prefix to custom commands?
  do sanity checks on parameters
  document parameters
  use rotational symmetry?
  copy all board data with a copy() (groups and liberties)
  extensive comparison of playouts with strength
  add more debug messages and debug levels
  more regression testing
  add loadsgf command
  setting to filter boardsize, time_settings, etc. for kgs
  try a "global RAVE"
  try use parent info in children (or grand parent)
  make atari-aware playouts dependant on size of group?
  make self-atari feature dependant on group size
  add hg tracked cgos,kgs?,gomill? scripts
  make SL page
  support terminal jigo in tree?
  add seg fault and exception handling
  try use Benson algo in tree and playouts?

