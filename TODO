TODO
------------------

Now: (before next release)
  play a move early if it is clearly the right move
  think for longer if needed
  cleanup symmetry code
  organise parameters

Soon: (before next major release)
  implement superko in tree
  copy all board data with a copy() (groups and liberties)
  improve playout move selection (quicker but still uniform or close)
  tune parameters
  add slight bonus to ratio for pts diff?
  try use thrown away part of tree
  do comparison of playouts with strength
  try a "global RAVE"
  place a limit of sorts on depth? (expand after more plts)
  try use parent info in children (or grand parent)
  implement the mercy rule?
  try UCB1-TUNED formula (p.216(169) in SylvainGellyThesis)
  make atari-aware playouts dependant on size of group?
  avoid self-atari in playouts with a group size over x?
  play at one of liberties of a enemy group with 2?
  prefer closer moves using CFG to last and next-to-last move
  store neighbour counts for each board position? (num of empty...)
  analyse initial urgency and how rave contributes
  reduce calls to validMoveCheck?
  prefer games that end sooner? (don't drag on at end)
  progressively add more reward for points diff if winrate very good?
  add regression testing
  add more debug messages and debug levels
  move playout/time/tree code out of engine

Later: (at some point)
  make sure install works and is described somewhere
  add handicap settings
  add timestamp to log?
  add an opening book?
  replace FunctionList and ConstantList with std::list<>
  rename/refactor Engine to better name?
  move Go:: objects into own files?
  move main() into Oakfoam.cc
  add prefix to custom commands?
  do sanity checks on parameters
  document parameters


